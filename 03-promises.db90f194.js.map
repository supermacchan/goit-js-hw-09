{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAExCF,EAAKM,iBAAiB,UAmBtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAQC,OAAOP,EAAQQ,OACvBC,EAAWF,OAAON,EAAOO,OACzBE,EAASH,OAAOL,EAASM,OAE3BG,EAAW,EACXC,EAAQN,EAEZO,YAAW,WACT,IAAMC,EAAaC,aAAY,WA5BnC,IAAuBC,EAAUC,GAAVD,EA6BjBL,GAAY,EA7BeM,EA+BDL,EA9BRM,KAAKC,SAAW,GAG7BC,QAAQC,QAAQ,CACrBL,SAAUA,EACVC,MAAOA,IAIFG,QAAQE,OAAO,CACpBN,SAAUA,EACVC,MAAOA,KAoBJM,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUC,EAAKO,EAALP,MACjBQ,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAoCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OAClEY,QAAQC,IAAI,uBAAwCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE3Dc,OAAM,SAAAP,G,IAAGR,EAAQQ,EAARR,SAAUC,EAAKO,EAALP,MAClBQ,EAAA9B,GAAS+B,OAAOM,QAAQ,oBAAmCJ,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OACjEY,QAAQC,IAAI,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAG3DL,GAASH,EAEHE,IAAaD,GACfuB,cAAcnB,E,GAGjBL,E,GACFH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    return Promise.resolve({\n      position: position,\n      delay: delay,\n    });\n  } else {\n    // Reject\n    return Promise.reject({\n      position: position,\n      delay: delay,\n    });\n  }\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const DELAY = Number(delayEl.value);\n  const INTERVAL = Number(stepEl.value);\n  const AMOUNT = Number(amountEl.value);\n\n  let position = 0;\n  let delay = DELAY;\n\n  setTimeout(() => {\n    const intervalId = setInterval(() => {\n      position += 1;\n      \n        createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n      \n      delay += INTERVAL;\n      \n        if (position === AMOUNT) {\n          clearInterval(intervalId);\n        }\n      \n    }, INTERVAL);\n  }, DELAY);\n}\n\n\n\n\n  "],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","addEventListener","event","preventDefault","DELAY","Number","value","INTERVAL","AMOUNT","position1","delay1","setTimeout","intervalId","setInterval","position","delay","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","clearInterval"],"version":3,"file":"03-promises.db90f194.js.map"}